<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="71059" started-at="2020-08-02T14:57:39Z" finished-at="2020-08-02T14:58:51Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="71059" started-at="2020-08-02T14:57:39Z" finished-at="2020-08-02T14:58:51Z">
      <class name="testPackage.TestClass">
        <test-method status="FAIL" signature="scenario_01()[pri:0, instance:testPackage.TestClass@23fe1d71]" name="scenario_01" duration-ms="16337" started-at="2020-08-02T14:57:40Z" description="Evaluate the broken images out of all images and assert the result." finished-at="2020-08-02T14:57:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at testPackage.TestClass.scenario_01(TestClass.java:78)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario_01 -->
        <test-method status="PASS" signature="scenario_02()[pri:0, instance:testPackage.TestClass@23fe1d71]" name="scenario_02" duration-ms="20498" started-at="2020-08-02T14:57:56Z" description="Basic Auth" finished-at="2020-08-02T14:58:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario_02 -->
        <test-method status="PASS" signature="scenario_03()[pri:0, instance:testPackage.TestClass@23fe1d71]" name="scenario_03" duration-ms="16338" started-at="2020-08-02T14:58:16Z" description="Move slider to Max and Min" finished-at="2020-08-02T14:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario_03 -->
        <test-method status="PASS" signature="scenario_04()[pri:0, instance:testPackage.TestClass@23fe1d71]" name="scenario_04" duration-ms="17817" started-at="2020-08-02T14:58:33Z" description="Hover on the pictures and assert the details like User" finished-at="2020-08-02T14:58:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scenario_04 -->
      </class> <!-- testPackage.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
